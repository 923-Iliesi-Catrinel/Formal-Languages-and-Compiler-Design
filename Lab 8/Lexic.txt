Cat Programming Language Specification

Alphabet:

a. Uppercase (A-Z) and lowercase (a-z) letters of the English alphabet
b. Decimal digits (0-9)
c. Special characters ! ? ( ) [ ] { } # $ % & ' " + - * / . , : ; @ ^ _ ` | ~

Lexic:

a. Special symbols, representing:
    1. Operators: 
        - arithmetic: add sub mul div mod
        - relational: < <= > >= eq noteq
        - logical: and or
        - assignment: ->
    2. Separators: [ ] { } ( ) whitespace : ,
    3. Reserved words:
        - input/output ::= read/write
        - condition ::= if/otherwise
        - loop ::= loopfor/loopwhile
        - types ::= integer/boolean/character/array/string
    4. Comments: ~ (at the beginning of each line)

b. Identifiers:
    - a sequence of maximum 255 characters composed from character "@", letters (uppercase and lowercase) and digits, starting with a letter:
        identifier ::= "@" letter { letter | digit }

        letter ::= "A" | "B" | ... | "Z" | "a" | "b" | ... | "z"
        digit ::= "0" | nonzero
        nonzero ::= "1" | .. | "9"

        special_char ::= " " | "!" | "?" | "(" | ")" | "[" | "] | "{" | "}" | "#" | "$" | "%" | "&" | "'" | """ |  "+" | "-" | "*" | "/" | "." | "," | ":" | ";" | "@" | "^" | "_" | "`" | "|" | "~"

c. Constants:
    constant ::= number | character | string

    1. Integer:
        number ::= ["+" | "-"] nonzero {digit} | "0"

    2. Character:
        character ::= "'" char "'"'
        
    3. String:
        string ::= '"' {char} '"'
        char ::= letter | digit | special_char
